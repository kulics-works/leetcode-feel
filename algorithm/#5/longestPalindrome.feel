longestPalindrome = (s: str->v: str) {
    s.len < 1 ? {
        <- ""
    }
    !start, !end = 0, 0
    0 ..< s.len @ i {
        len1 = expandAroundCenter(s, i, i)
        len2 = expandAroundCenter(s, i, i + 1)
        length = max(len1, len2)
        length > end - start ? {
            start = i - (length - 1) / 2
            end = i + length / 2
        }
    }
    <- s[start..end]
}

-- 中心扩展校验回文
expandAroundCenter = (s: str, left: int, right: int->v: int) {
    !L, !R = left, right
    L >= 0 && R < s.len && s[L] == s[R] @ {
        L -= 1
        R += 1
    }
    <- R - L - 1
}
