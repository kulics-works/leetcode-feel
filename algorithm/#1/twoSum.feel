TwoSum = (nums: (Int)List -> v: (Int)List) {
    Hashmap = (Int, Int)Dict_of()
    @ nums => [i]v {
        Temp = target - v
        ? Hashmap.Contains(Temp) {
            <- (Int)List_of(i, Hashmap[Temp])
        } | {
            Hashmap[v] = i
        }
    }
    <- (Int)List_of()
}
