#=
Definition for singly-linked list.
ListNode := $ {
    !Val: int
    !Next: ListNode?
}
=#

reverseKGroup := (head: ListNode?, k: int->v: ListNode?) {
    head == nil | head.Next == nil ? {
        <- head
    }
    !tail := head
    0 ..< k @ i {
        tail == nil ? {
            <- head
        }
        tail = tail.Next
    }
    newhead := reverse(head, tail)
    head.Next = reverseKGroup(tail, k)
    <- newhead
}

reverseList := (head: ListNode?, tail: ListNode?->v: ListNode?) {
    !prev: ListNode? = nil
    !curr := head
    curr >< tail @ {
        nextTemp := curr.Next
        curr.Next = prev
        prev = curr
        curr = nextTemp
    }
    <- prev
}
