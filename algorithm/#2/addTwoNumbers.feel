def ListNode of Nil | Cons(val Int, next ListNode);

let addTwoNumbers(l1 ListNode, l2 ListNode) ListNode = add(l1, l2, 0);

let add(l1 ListNode, l2 ListNode, val Int) ListNode = {
    let (sum, next1, next2) = when (l1, l2)
        is (Cons(v1, n1), Cons(v2, n2)) then
            (v1 + v2 + val, n1, n2)
        is (Cons(v, n), Nil) then
            (v + val, n, Nil)
        is (Nil, Cons(v, n)) then
            (v + val, n, Nil)
        is _ then return if val > 0 then Cons(val, Nil) else Nil;
    return Cons(sum % 10, add(next1, next2, sum / 10))
};