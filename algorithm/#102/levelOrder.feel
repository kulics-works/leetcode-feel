// Definition for a binary tree node.
TreeNode := $ (
    val : Int,
    left : ?TreeNode,
    right : ?TreeNode
) {}

LevelOrder := (root : ?TreeNode->v : List[List[Int]])  {
    levels := List_of[List[Int]]()
    ? root == nil {
        <- levels
    }
    Helper(root, 0)
    <- levels
}

Helper := (root : ?TreeNode, level : Int) {
    ? root == nil {
        <-
    }
    ? levels.Size() == level {
        levels.Append(List_of[Int]())
    }
    levels.(level).Append(root.val)
    Helper(root.left, level + 1)
    Helper(root.right, level + 1)
}

levels := List_of[List[Int]]()
