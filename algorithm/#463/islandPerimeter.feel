IslandPerimeter := (grid : List[List[Int]] -> v : Int) {
    ? grid.Size() == 0 {
        <- 0
    }
    count := 0
    repeat := 0
    @ i := 0.Up_until(grid.Size())... {
        @ j := 0.Up_until(grid.Get(i).Size())... {
            ? grid.Get(i).Get(j) == 1 {
                count += 1
                ? i <> 0 && grid.Get(i - 1).Get(j) == 1 {
                    repeat += 1
                }
                ? j <> 0 && grid.Get(i).Get(j - 1) == 1 {
                    repeat += 1
                }
            }
        }
    }
    <- count * 4 - repeat * 2
}
