ThreeSumClosest = (nums: (Int)List, target: Int->v: Int) {
    length = nums.Size()
    nums.Sort()
    closs = nums[0] + nums[1] + nums[2]
    @ 0 .. length => i {
        l, r = i + 1, length - 1
        @ l < r {
            sum = nums[i] + nums[l] + nums[r]
            ? Abs(sum - target) < Abs(closs - target) {
                closs = sum
            } | sum > target {
                r -= 1
            } | {
                l += 1
            }
        }
    }
    <- closs
}
