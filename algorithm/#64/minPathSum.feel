MinPathSum := (grid : List[List[Int]]->v : Int) {
    m, n := grid.Size(), grid.Get(0).Size()
    dp := List[List[Int]]$(m)
    @ i := 0.Up_until(m)... {
        dp.Set(i, List[Int]$(n))
    }

    @ i := 0.Up_until(m)... {
        @ j := 0.Up_until(n)... {
            ? i == 0 && j == 0 {
                dp.Get(i).Set(j, grid.Get(i).Get(j))
            } | i == 0 {
                dp.Get(i).Set(j, dp.Get(i).Get(j - 1) + grid.Get(i).Get(j))
            } | j == 0 {
                dp.Get(i).Set(j, dp.Get(i - 1).Get(j) + grid.Get(i).Get(j))
            } | {
                dp.Get(i).Set(j, Min(dp.Get(i - 1).Get(j), dp.Get(i).Get(j - 1)) + grid.Get(i).Get(j))
            }
        }
    }
    <- dp.Get(m - 1).Get(n - 1)
}
