ClimbStairs = (n: Int->v: Int) {
    dp = (Int)New_List(n)
    @ 0 .. n => i {
        ? i == 0 {
            dp[i] = 1
        } | i == 1 {
            dp[i] = dp[i - 1] + 1
        } | {
            dp[i] = dp[i - 1] + dp[i - 2]
        }
    }
    <- dp[n - 1]
}
