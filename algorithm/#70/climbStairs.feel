ClimbStairs := (n : Int->v : Int) {
    dp := List[Int]$(n)
    @ i := 0.Up_until(n)... {
        ? i == 0 {
            dp.Set(i, 1)
        } | i == 1 {
            dp.Set(i, dp.Get(i - 1) + 1)
        } | {
            dp.Set(i, dp.Get(i - 1) + dp.Get(i - 2))
        }
    }
    <- dp.Get(n - 1)
}
