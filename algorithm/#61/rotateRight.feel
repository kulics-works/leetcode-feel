` Definition for singly-linked list. `
ListNode = $ (
    val: Int,
    next: ListNode?
}

RotateRight = (head: ListNode?, k: Int->v: ListNode?) {
    ? head == nil {
        <- nil
    }
    ? head.next == nil {
        <- head
    }
    arr = (ListNode)List_of()
    temp = head
    @ temp <> nil {
        arr.Append(temp)
        ? temp.next <> nil {
            temp = temp.next
        } | {
            temp = nil
        }
    }
    ? k % arr.Size() == 0 {
        <- head
    } | k > arr.Size() {
        k = k % arr.Size()
    } 
    arr[arr.Size() - 1].next = arr[0]
    arr[arr.Size() - 1 - k].next = nil
    <- arr[arr.Size() - k]
}
