MinCostClimbingStairs = (cost: (Int)List->v: Int) {
    ? cost.Size() == 0 {
        <- 0
    }
    dp = (Int)List(cost.Size())
    dp[0] = cost[0]
    dp[1] = cost[1]
    @ 2 .. cost.Size() => i {
        dp[i] = cost[i] + Min(dp[i - 1], dp[i - 2])
    }
    <- Min(dp[cost.Size() - 1], dp[cost.Size() - 2])
}
