MinCostClimbingStairs := (cost : List[Int]->v : Int) {
    ? cost.Size() == 0 {
        <- 0
    }
    dp = List[Int]$(cost.Size())
    dp.Set(0, cost.Get(0))
    dp.Set(1, cost.Get(1))
    @ i := 2.Up_until(cost.Size())... {
        dp.Set(i, cost.Get(i) + Min(dp.Get(i - 1), dp.Get(i - 2)))
    }
    <- Min(dp.Get(cost.Size() - 1), dp.Get(cost.Size() - 2))
}
